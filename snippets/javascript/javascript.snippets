# Source: https://github.com/shuvalov-anton/vim-snippets/blob/master/snippets/javascript.snippets
snippet timeoutc
	setTimeout(function (that) {
		${0}
	}, ${1}, this);
snippet timeout
	setTimeout(function () {
		${0}
	}, ${1});
snippet intervalc
	setInterval(function (that) {
		${0}
	}, ${1}, this);
snippet interval
	setInterval(function () {
		${0}
	}, ${1});
snippet cl
	console.log(${0});
snippet cw
	console.warn(${0});
snippet ce
	console.error(${0});
snippet ci
	console.info(${0});
snippet cd
	console.dir(${0});
snippet method
	${1}: function () {
		${0}
	},
snippet req
	require('${1}');
snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3}) {
		${0}
	};
snippet f
	function(${1}) {
		${0}
	}
snippet :f
	${1}: function (${2}) {
		${0}
	}${3:,}
snippet fn
	function ${1} (${2}) {
		${0}
	};
snippet g
	function * (${1}) {
		${0}
	}
snippet :g
	${1}: function * (${2}) {
		${0}
	}${3:,}
snippet gn
	function *${1} (${2}) {
		${0}
	}
snippet if
	if (${1:true}) {
		${0};
	}
snippet ife
	if (${1:true}) {
		${2};
	} else {
		${0};
	}
snippet ?
	${1} ? ${2} : ${0};
snippet /**
	/**
	* ${0:why?}
	*/
snippet /**p
	/**
	* ${0:why?}
	*
	* @private
	*/
snippet aclick
	${1}.on('click', function (e) {
		${0}

		e.preventDefault();
	});
snippet prevent
	e.preventDefault();
snippet stop
	e.stopPropagation();
snippet constructor
	constructor($1) {
		super(${1:props});
		${0}
	}
snippet ifx
	{${1} ? (
		${0}
	) : false}
snippet ifex
	{${1}
	? (
		${2}
	)
	: (
		${0}
	)}
snippet imp
	import ${1} from '${2}';
snippet mapx
	{this.props.collection.map(model => {
		return (
			<${1:div}
				key={model.id}
			/>
		);
	})}
snippet stateless
	import React from 'lib/react';

	let $1 = (props) => (
		<div>
			${1:ClassName}
		</div>
	);

	// $1.propTypes = {};
	// $1.defaultProps = {};

	export default $1;
